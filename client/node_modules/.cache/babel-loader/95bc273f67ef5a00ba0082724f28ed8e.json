{"ast":null,"code":"import _objectSpread from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"c:\\\\Users\\\\Lori Salazar\\\\Documents\\\\GoPlayRuff\\\\client\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React from 'react';\nimport ReactDOM from 'react';\nimport { Motion, spring } from 'react-motion';\nimport _ from \"lodash\";\nimport image_part_001 from \"./Assets/image_part_001.jpg\";\nimport image_part_002 from \"./Assets/image_part_002.jpg\";\nimport image_part_003 from \"./Assets/image_part_003.jpg\";\nimport image_part_004 from \"./Assets/image_part_004.jpg\";\nimport image_part_005 from \"./Assets/image_part_005.jpg\";\nimport image_part_006 from \"./Assets/image_part_006.jpg\";\nimport image_part_007 from \"./Assets/image_part_007.jpg\";\nimport image_part_008 from \"./Assets/image_part_008.jpg\";\nvar Component = React.Component; // const {render} = ReactDOM\n// const {range} = _\n\nvar images = [image_part_001, image_part_002, image_part_003, image_part_004, image_part_005, image_part_006, image_part_007, image_part_008];\nvar tilesStyle = {\n  listStyle: 'none',\n  margin: '0 auto',\n  padding: 5,\n  position: 'relative'\n};\nvar tileStyle = {\n  backgroundImage: \"images[0]\",\n  boxShadow: 'inset 0 0 1px 0 black',\n  boxSizing: 'border-box',\n  display: 'block',\n  position: 'absolute'\n};\nvar holeStyle = {\n  opacity: 0\n};\nvar buttonStyle = {\n  display: 'block',\n  margin: '16px auto',\n  padding: '8px 16px',\n  background: 'teal',\n  flexDirection: 'row' // Checks if the puzzle can be solved.\n  //\n  // Examples:\n  //   isSolvable([3, 7, 6, 0, 5, 1, 2, 4, 8], 3, 3) // => false\n  //   isSolvable([6, 4, 5, 0, 1, 2, 3, 7, 8], 3, 3) // => true\n\n};\n\nfunction isSolvable(numbers, rows, cols) {\n  var product = 1;\n\n  for (var i = 1, l = rows * cols - 1; i <= l; i++) {\n    for (var j = i + 1, m = l + 1; j <= m; j++) {\n      product *= (numbers[i - 1] - numbers[j - 1]) / (i - j);\n    }\n  }\n\n  return Math.round(product) === 1;\n} // Checks if the puzzle is solved.\n//\n// Examples:\n//   isSolved([6, 4, 5, 0, 1, 2, 3, 7, 8]) // => false\n//   isSolved([0, 1, 2, 3, 4, 5, 6, 7, 8]) // => true\n\n\nfunction isSolved(numbers) {\n  for (var i = 0, l = numbers.length; i < l; i++) {\n    if (numbers[i] !== i) {\n      return false;\n    }\n  }\n\n  return true;\n} // Get the linear index from a row/col pair.\n\n\nfunction getLinearPosition(_ref, rows, cols) {\n  var row = _ref.row,\n      col = _ref.col;\n  return parseInt(row, 10) * cols + parseInt(col, 10);\n} // Get the row/col pair from a linear index.\n\n\nfunction getMatrixPosition(index, rows, cols) {\n  return {\n    row: Math.floor(index / cols),\n    col: index % cols\n  };\n}\n\nfunction getVisualPosition(_ref2, width, height) {\n  var row = _ref2.row,\n      col = _ref2.col;\n  return {\n    x: col * width,\n    y: row * height\n  };\n}\n\nfunction _shuffle(numbers, hole, rows, cols) {\n  do {\n    numbers = _.shuffle(_.without(numbers, hole)).concat(hole);\n  } while (isSolved(numbers) || !isSolvable(numbers, rows, cols));\n\n  return numbers;\n}\n\nfunction canSwap(src, dest, rows, cols) {\n  var _getMatrixPosition = getMatrixPosition(src, rows, cols),\n      srcRow = _getMatrixPosition.row,\n      srcCol = _getMatrixPosition.col;\n\n  var _getMatrixPosition2 = getMatrixPosition(dest, rows, cols),\n      destRow = _getMatrixPosition2.row,\n      destCol = _getMatrixPosition2.col;\n\n  return Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1;\n}\n\nfunction _swap(numbers, src, dest) {\n  numbers = _.clone(numbers);\n  var _ref3 = [numbers[dest], numbers[src]];\n  numbers[src] = _ref3[0];\n  numbers[dest] = _ref3[1];\n  return numbers;\n}\n\nvar Tile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tile, _Component);\n\n  function Tile() {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tile).call(this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      var index = this.props.index;\n      this.props.onClick(index);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          hole = _this$props.hole,\n          number = _this$props.number,\n          index = _this$props.index,\n          rows = _this$props.rows,\n          cols = _this$props.cols,\n          width = _this$props.width,\n          height = _this$props.height,\n          images = _this$props.images;\n      var matrixPos = getMatrixPosition(index, rows, cols);\n      var visualPos = getVisualPosition(matrixPos, width, height);\n      var motionStyle = {\n        translateX: spring(visualPos.x),\n        translateY: spring(visualPos.y)\n      };\n\n      var style = _objectSpread({}, tileStyle, number === hole ? holeStyle : {}, {\n        width: width,\n        height: height\n      });\n\n      return React.createElement(Motion, {\n        style: motionStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, function (_ref4) {\n        var translateX = _ref4.translateX,\n            translateY = _ref4.translateY;\n        return React.createElement(\"li\", {\n          style: _objectSpread({}, style, {\n            transform: \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px, 0)\")\n          }),\n          onClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: _this2.props.image,\n          width: 100,\n          height: 100,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return Tile;\n}(Component);\n\nvar Tiles =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Tiles, _Component2);\n\n  function Tiles(props) {\n    var _this3;\n\n    _classCallCheck(this, Tiles);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Tiles).call(this, props));\n    var rows = props.rows,\n        cols = props.cols;\n    _this3.state = {\n      numbers: _.range(0, rows * cols)\n    };\n    _this3.handleTileClick = _this3.handleTileClick.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleButtonClick = _this3.handleButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(Tiles, [{\n    key: \"handleTileClick\",\n    value: function handleTileClick(index) {\n      this.swap(index);\n    }\n  }, {\n    key: \"handleButtonClick\",\n    value: function handleButtonClick() {\n      this.shuffle();\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle() {\n      var _this$props2 = this.props,\n          hole = _this$props2.hole,\n          rows = _this$props2.rows,\n          cols = _this$props2.cols;\n      var numbers = this.state.numbers;\n\n      var shuffledNumbers = _shuffle(numbers, hole, rows, cols);\n\n      this.setState({\n        numbers: shuffledNumbers\n      });\n    }\n  }, {\n    key: \"swap\",\n    value: function swap(tileIndex) {\n      var _this$props3 = this.props,\n          hole = _this$props3.hole,\n          rows = _this$props3.rows,\n          cols = _this$props3.cols;\n      var numbers = this.state.numbers;\n      var holeIndex = numbers.indexOf(hole);\n\n      if (canSwap(tileIndex, holeIndex, rows, cols)) {\n        var newNumbers = _swap(numbers, tileIndex, holeIndex);\n\n        this.setState({\n          numbers: newNumbers\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          rows = _this$props4.rows,\n          cols = _this$props4.cols,\n          width = _this$props4.width,\n          height = _this$props4.height;\n      var numbers = this.state.numbers;\n      var solved = isSolved(numbers);\n      var pieceWidth = Math.round(width / cols);\n      var pieceHeight = Math.round(height / rows);\n\n      var style = _objectSpread({}, tilesStyle, {\n        width: width,\n        height: height\n      });\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, numbers.map(function (number, index) {\n        return React.createElement(Tile, Object.assign({}, _this4.props, {\n          index: index,\n          number: number,\n          key: number,\n          width: pieceWidth,\n          height: pieceHeight,\n          image: images[number],\n          onClick: _this4.handleTileClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }));\n      })), React.createElement(\"button\", {\n        style: buttonStyle,\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, solved ? 'Start' : 'Restart'));\n    }\n  }]);\n\n  return Tiles;\n}(Component);\n\nvar Puzzle =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Puzzle, _Component3);\n\n  function Puzzle() {\n    _classCallCheck(this, Puzzle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Puzzle).apply(this, arguments));\n  }\n\n  _createClass(Puzzle, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tiles, {\n        rows: 3,\n        cols: 3,\n        hole: 8,\n        width: 300,\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Puzzle;\n}(Component);\n\nexport default Puzzle;","map":{"version":3,"sources":["c:\\Users\\Lori Salazar\\Documents\\GoPlayRuff\\client\\src\\components\\Game\\Game.js"],"names":["React","ReactDOM","Motion","spring","_","image_part_001","image_part_002","image_part_003","image_part_004","image_part_005","image_part_006","image_part_007","image_part_008","Component","images","tilesStyle","listStyle","margin","padding","position","tileStyle","backgroundImage","boxShadow","boxSizing","display","holeStyle","opacity","buttonStyle","background","flexDirection","isSolvable","numbers","rows","cols","product","i","l","j","m","Math","round","isSolved","length","getLinearPosition","row","col","parseInt","getMatrixPosition","index","floor","getVisualPosition","width","height","x","y","shuffle","hole","without","concat","canSwap","src","dest","srcRow","srcCol","destRow","destCol","abs","swap","clone","Tile","handleClick","bind","props","onClick","number","matrixPos","visualPos","motionStyle","translateX","translateY","style","transform","image","Tiles","state","range","handleTileClick","handleButtonClick","shuffledNumbers","setState","tileIndex","holeIndex","indexOf","newNumbers","solved","pieceWidth","pieceHeight","map","Puzzle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react';\nimport {Motion, spring} from 'react-motion';\nimport _ from \"lodash\";\nimport image_part_001 from \"./Assets/image_part_001.jpg\"\nimport image_part_002 from \"./Assets/image_part_002.jpg\"\nimport image_part_003 from \"./Assets/image_part_003.jpg\"\nimport image_part_004 from \"./Assets/image_part_004.jpg\"\nimport image_part_005 from \"./Assets/image_part_005.jpg\"\nimport image_part_006 from \"./Assets/image_part_006.jpg\"\nimport image_part_007 from \"./Assets/image_part_007.jpg\"\nimport image_part_008 from \"./Assets/image_part_008.jpg\"\n\n\n\nconst {Component} = React\n// const {render} = ReactDOM\n// const {range} = _\n\nconst images = [\n  image_part_001, image_part_002, image_part_003, image_part_004, image_part_005, image_part_006, image_part_007, image_part_008\n];\n  \n\n\nconst tilesStyle = {\n  listStyle: 'none',\n  margin: '0 auto',\n  padding: 5,\n  position: 'relative'\n}\n\nconst tileStyle = {\n  backgroundImage:  \"images[0]\",\n  boxShadow: 'inset 0 0 1px 0 black',\n  boxSizing: 'border-box',\n  display: 'block',\n  position: 'absolute'\n}\n\nconst holeStyle = {\n  opacity: 0\n}\n\nconst buttonStyle = {\n  display: 'block',\n  margin: '16px auto',\n  padding: '8px 16px',\n  background: 'teal',\n  flexDirection: 'row'\n}\n\n// Checks if the puzzle can be solved.\n//\n// Examples:\n//   isSolvable([3, 7, 6, 0, 5, 1, 2, 4, 8], 3, 3) // => false\n//   isSolvable([6, 4, 5, 0, 1, 2, 3, 7, 8], 3, 3) // => true\nfunction isSolvable (numbers, rows, cols) {\n  let product = 1\n  for (let i = 1, l = rows * cols - 1; i <= l; i++) {\n    for (let j = i + 1, m = l + 1; j <= m; j++) {\n      product *= (numbers[i - 1] - numbers[j - 1]) / (i - j)\n    }\n  }\n  return Math.round(product) === 1\n}\n\n// Checks if the puzzle is solved.\n//\n// Examples:\n//   isSolved([6, 4, 5, 0, 1, 2, 3, 7, 8]) // => false\n//   isSolved([0, 1, 2, 3, 4, 5, 6, 7, 8]) // => true\nfunction isSolved (numbers) {\n  for (let i = 0, l = numbers.length; i < l; i++) {\n    if (numbers[i] !== i) {\n      return false\n    }\n  }\n  return true\n}\n\n// Get the linear index from a row/col pair.\nfunction getLinearPosition ({row, col}, rows, cols) {\n  return parseInt(row, 10) * cols + parseInt(col, 10)\n}\n\n// Get the row/col pair from a linear index.\nfunction getMatrixPosition (index, rows, cols) {\n  return {\n    row: Math.floor(index / cols),\n    col: index % cols\n  }\n}\n\nfunction getVisualPosition ({row, col}, width, height) {\n  return {\n    x: col * width,\n    y: row * height\n  }\n}\n\nfunction shuffle (numbers, hole, rows, cols) {\n  do {\n    numbers = _.shuffle(_.without(numbers, hole)).concat(hole)\n  } while (isSolved(numbers) || !isSolvable(numbers, rows, cols))\n  return numbers\n}\n\nfunction canSwap (src, dest, rows, cols) {\n  const {row: srcRow, col: srcCol} = getMatrixPosition(src, rows, cols)\n  const {row: destRow, col: destCol} = getMatrixPosition(dest, rows, cols)\n  return (Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1)\n}\n\nfunction swap (numbers, src, dest) {\n  numbers = _.clone(numbers);\n  [numbers[src], numbers[dest]] = [numbers[dest], numbers[src]]\n  return numbers\n}\n\nclass Tile extends Component {\n  constructor () {\n    super()\n    \n    this.handleClick = this.handleClick.bind(this)\n  }\n  \n  handleClick () {\n    const {index} = this.props\n    this.props.onClick(index)\n  }\n  \n  render () {\n    const {hole, number, index, rows, cols, width, height, images} = this.props\n    const matrixPos = getMatrixPosition(index, rows, cols)\n    const visualPos = getVisualPosition(matrixPos, width, height)\n    const motionStyle = {\n      translateX: spring(visualPos.x),\n      translateY: spring(visualPos.y)\n    }\n    const style = {\n      ...tileStyle,\n      ...(number === hole ? holeStyle : {}),\n      width,\n      height\n    }\n    \n    return (\n      <Motion style={motionStyle}>\n        {({translateX, translateY}) => (\n          <li style={{...style, transform: `translate3d(${translateX}px, ${translateY}px, 0)`}}\n            onClick={this.handleClick}\n            >\n           \n            <img src={this.props.image} width={100} height={100} />\n            \n           \n          </li>\n        )}\n      </Motion>\n    )\n  }\n}\n\nclass Tiles extends Component {\n  constructor (props) {\n    super(props)\n    \n    const {rows, cols} = props\n    this.state = {numbers: _.range(0, rows * cols)}\n    \n    this.handleTileClick = this.handleTileClick.bind(this)\n    this.handleButtonClick = this.handleButtonClick.bind(this)\n  }\n  \n  handleTileClick (index) {\n    this.swap(index)\n  }\n  \n  handleButtonClick () {\n    this.shuffle()\n  }\n  \n  shuffle () {\n    const {hole, rows, cols} = this.props\n    const {numbers} = this.state\n    const shuffledNumbers = shuffle(numbers, hole, rows, cols)\n    this.setState({numbers: shuffledNumbers})\n  }\n  \n  swap (tileIndex) {\n    const {hole, rows, cols} = this.props\n    const {numbers} = this.state\n    const holeIndex = numbers.indexOf(hole)\n    if (canSwap(tileIndex, holeIndex, rows, cols)) {\n      const newNumbers = swap(numbers, tileIndex, holeIndex)\n      this.setState({numbers: newNumbers})\n    }\n  }\n  \n  render () {\n    const {rows, cols, width, height} = this.props\n    const {numbers} = this.state\n    const solved = isSolved(numbers)\n    const pieceWidth = Math.round(width / cols)\n    const pieceHeight = Math.round(height / rows)\n    const style = {\n      ...tilesStyle,\n      width,\n      height\n    }\n    \n    return (\n      <div>\n        <ul style={style}>\n          {numbers.map((number, index) => (\n            <Tile {...this.props} index={index} number={number} key={number}\n              width={pieceWidth} height={pieceHeight} image={images[number]}\n              onClick={this.handleTileClick}\n            />\n          ))}\n        </ul>\n        <button style={buttonStyle}\n          onClick={this.handleButtonClick}\n        >\n          {solved ? 'Start' : 'Restart'}\n        </button>\n      </div>\n    )\n  }\n}\n\nclass Puzzle extends Component {\n  render () {\n    return (\n      <Tiles rows={3} cols={3} hole={8}\n        width={300} height={300}\n      />\n    )\n  }\n}\n\nexport default Puzzle;"]},"metadata":{},"sourceType":"module"}